parameters:
  - name: Environment
    type: string
    displayName: To which environment pipeline has to be run?
    default: Dev
    values:
      - Dev
      - QA
      - Stage
      - Prod
  - name: ProjectName
    type: string
    displayName: project name
    default: "./Example.sln"   
  - name: arguments
    type: string
    displayName: arguments
    default: "--configuration Release --output publish_output"   
  - name: verbosity
    type: string
    displayName: verbosity
    default: "Detailed"     
  - name: artifactName
    type: string
    displayName: ArtifactName
    default: "drop"  
stages:
- stage: Build
  displayName: Build       
  jobs:
    - job: build
      displayName: Build and Test, create artifacts
      pool:
        vmImage: 'windows-2019'
      variables:
        BuildConfiguration: 'Release'
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'dotnet restore'
        inputs:
          command: restore
          projects: '${{ parameters.ProjectName }}'
          verbosityRestore: '${{ parameters.verbosity }}'
          verbosityPack: '${{ parameters.verbosity }}'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          projects: '${{ parameters.ProjectName }}'
          arguments: '${{ parameters.arguments }}'
          verbosityRestore: '${{ parameters.verbosity }}'
          verbosityPack: '${{ parameters.verbosity }}'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish'
        inputs:
          command: publish
          arguments: '${{ parameters.arguments }}'
          verbosityRestore: '${{ parameters.verbosity }}'
          verbosityPack: '${{ parameters.verbosity }}'
        enabled: false
      - task: ArchiveFiles@2
        displayName: 'Archive "$(System.DefaultWorkingDirectory)/publish_output"'
        inputs:
          rootFolderOrFile: '"$(System.DefaultWorkingDirectory)/publish_output"'
          includeRootFolder: false
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: ${{ parameters.artifactName }}'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: '${{ parameters.artifactName }}' 
          